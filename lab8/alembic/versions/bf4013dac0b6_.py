"""empty message

Revision ID: bf4013dac0b6
Revises: 
Create Date: 2024-12-05 15:06:01.721226

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bf4013dac0b6'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('home',
    sa.Column('address', sa.String(), nullable=False),
    sa.Column('commisioning', sa.Date(), nullable=True),
    sa.Column('floors', sa.Integer(), nullable=False),
    sa.Column('index', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('address')
    )
    op.create_table('resident',
    sa.Column('passport_data', sa.String(), nullable=False),
    sa.Column('snp', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('phone', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('passport_data')
    )
    op.create_table('worker',
    sa.Column('inn', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('phone', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('inn')
    )
    op.create_table('contract',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('transaction_date', sa.Date(), nullable=False),
    sa.Column('until_date', sa.Date(), nullable=False),
    sa.Column('payment', sa.Integer(), nullable=False),
    sa.Column('home_address', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['home_address'], ['home.address'], ondelete='restrict'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('task',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('payment', sa.Integer(), nullable=False),
    sa.Column('completed_date', sa.Date(), nullable=True),
    sa.Column('until_date', sa.Date(), nullable=False),
    sa.Column('home_address', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['home_address'], ['home.address'], ondelete='restrict'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('payment',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('paid_date', sa.Date(), nullable=True),
    sa.Column('until_date', sa.Date(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ondelete='set null'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('residents_contracts',
    sa.Column('resident_passport_data', sa.String(), nullable=False),
    sa.Column('contract_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['contract_id'], ['contract.id'], ),
    sa.ForeignKeyConstraint(['resident_passport_data'], ['resident.passport_data'], ),
    sa.PrimaryKeyConstraint('resident_passport_data', 'contract_id')
    )
    op.create_table('workers_tasks',
    sa.Column('worker_inn', sa.String(), nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['task_id'], ['task.id'], ),
    sa.ForeignKeyConstraint(['worker_inn'], ['worker.inn'], ),
    sa.PrimaryKeyConstraint('worker_inn', 'task_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workers_tasks')
    op.drop_table('residents_contracts')
    op.drop_table('payment')
    op.drop_table('task')
    op.drop_table('contract')
    op.drop_table('worker')
    op.drop_table('resident')
    op.drop_table('home')
    # ### end Alembic commands ###
